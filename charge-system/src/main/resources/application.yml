spring:
  profiles:
    active: ${charge_env:dev}
  application:
    name: charge-system
  main:
    allow-circular-references: true
  cloud:
    nacos:
      config:
        server-addr: 192.168.100.204:8848
        file-extension: yml
        # prefix: 文件名前缀，默认是spring.application.name
        # 如果没有指定命令空间，则默认命令空间为PUBLIC
        namespace: 41247855-8d70-4ce2-af63-46b0f802a656
        # 如果没有配置Group，则默认值为DEFAULT_GROUP
        group: DEFAULT_GROUP
        # 从Nacos读取配置项的超时时间
        timeout: 5000
        # 长轮训超时时间
        config-long-poll-timeout: 1000
        # 重试时间
        config-retry-time: 100000
        # 长轮训重试次数
        max-retry: 3
        # 开启监听和自动刷新
        refresh-enabled: true
        # Nacos的扩展配置项，数字越大优先级越高
        enable-remote-sync-config: true
#        extension-configs:
#          - dataId: redis-config.yml
#            group: EXT_GROUP
#            refresh: true
#          - dataId: mysql-config.yml
#            group: EXT_GROUP
#            refresh: true
#          - dataId: mybatis-config.yml
#            group: EXT_GROUP
#            refresh: true
      discovery:
        # Nacos的服务注册地址，可以配置多个，逗号分隔
        server-addr: 192.168.100.204:8848
        # 服务注册到Nacos上的名称，一般不用配置
        service: ${spring.application.name}
        # nacos客户端向服务端发送心跳的时间间隔，时间单位其实是ms
        heart-beat-interval: 5000
        # 服务端没有接受到客户端心跳请求就将其设为不健康的时间间隔，默认为15s
        # 注：推荐值该值为15s即可，如果有的业务线希望服务下线或者出故障时希望尽快被发现，可以适当减少该值
        heart-beat-timeout: 20000
        # 元数据部分 - 可以自己随便定制
        metadata:
          name: customer
          mydata: abc
        # 客户端在启动时是否读取本地配置项(一个文件)来获取服务列表
        # 注：推荐该值为false，若改成true。则客户端会在本地的一个
        # 文件中保存服务信息，当下次宕机启动时，会优先读取本地的配置对外提供服务。
        naming-load-cache-at-start: false
        # 命名空间ID，Nacos通过不同的命名空间来区分不同的环境，进行数据隔离，
        namespace: 41247855-8d70-4ce2-af63-46b0f802a656
        # 创建不同的集群
        cluster-name: Cluster-A
        # [注意]两个服务如果存在上下游调用关系，必须配置相同的group才能发起访问
        group: charge
        # 向注册中心注册服务，默认为true
        # 如果只消费服务，不作为服务提供方，倒是可以设置成false，减少开销
        register-enabled: true
  config:
    import:
      - optional:nacos:${spring.application.name}-${spring.profiles.active}.yml # 监听 DEFAULT_GROUP:test.yml
      - optional:nacos:mysql-config.yml?group=EXT_GROUP # 覆盖默认 group, 监听 mysql-config.yml
      - optional:nacos:redis-config.yml?group=EXT_GROUP # 覆盖默认 group, 监听 redis-config.yml
      - optional:nacos:mybatis-config.yml?group=EXT_GROUP # 覆盖默认 group, 监听 redis-config.yml
    #      - optional:nacos:test02.yml?group=group_02&refreshEnabled=false # 不开启动态刷新
    #      - nacos:test03.yml # 在拉取nacos配置异常时会快速失败, 会导致 spring 容器启动失败
    #        file-extension: yml
    #  profiles:
    #    active: ${charge_env:dev}
log:
  path: ../log
  moduleName: ${spring.application.name}
  level: debug
logging:
  config: classpath:logback-spring.xml
  level:
    com.haylion: debug
    com.haylion.common.repository.mapper: debug
    com.haylion.common.log.client: info
