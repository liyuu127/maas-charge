<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haylion.common.repository.mapper.RoleResourceTMapper">
    <resultMap id="BaseResultMap" type="com.haylion.common.entity.entity.RoleResourceT">

        <id column="id" property="id"/>
        <result column="role_id" property="roleId"/>
        <result column="resource_id" property="resourceId"/>
    </resultMap>
    <sql id="Base_Column_List">

    id, role_id, resource_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from role_resource_t
        where id = #{id}
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.haylion.common.entity.entity.RoleResourceT" useGeneratedKeys="true">

    insert into role_resource_t (role_id, resource_id)
    values (#{roleId}, #{resourceId})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.haylion.common.entity.entity.RoleResourceT" useGeneratedKeys="true">

        insert into role_resource_t
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="resourceId != null">
                #{resourceId},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.haylion.common.entity.entity.RoleResourceT">

        update role_resource_t
        <set>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.haylion.common.entity.entity.RoleResourceT">

    update role_resource_t
    set role_id = #{roleId},
      resource_id = #{resourceId}
    where id = #{id}
  </update>
    <insert id="insertList">
        insert into role_resource_t
        (role_id, resource_id)
        values
        <foreach collection="resourceIdList" item="item" separator=",">
            (#{roleId}, #{item} )
        </foreach>
    </insert>
    <delete id="deleteByRoleId">
    delete
    from role_resource_t
    where role_id = #{roleId}
  </delete>
</mapper>